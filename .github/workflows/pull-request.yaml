name: "Receive Pull Request"

on:
  pull_request:
    types:
      [opened, synchronize, reopened]

jobs:
  build-md-source:
    name: "Build Markdown Source Files"
    runs-on: macOS-latest
    if: ${{ github.event.action != 'closed' }}
    env:
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}
      CHIVE: ${{ github.workspace }}/site/chive
      PR: ${{ github.workspace }}/site/pr
      MD: ${{ github.workspace }}/site/built
    steps:
      - name: "Check out main branch"
        uses: actions/checkout@v2

      - name: "Check out staging branch"
        uses: actions/checkout@v2
        with:
          ref: md-outputs
          path: ${{ env.MD }}

      - uses: r-lib/actions/setup-r@v1
      - uses: r-lib/actions/setup-pandoc@v1
        with:
          pandoc-version: "2.11.4"

      - name: setup dependencies
        run: brew install libgit2 harfbuzz fribidi

      - name: Restore Package Cache
        uses: actions/cache@v2
        with:
          path: ${{ env.R_LIBS_USER }}
          key: ${{ runner.os }}-${{ hashFiles('.github/R-version') }}-1-${{ hashFiles('.github/depends.Rds') }}
          restore-keys: ${{ runner.os }}-${{ hashFiles('.github/R-version') }}-1-

      - name: Query Sandpaper Dependencies
        run: |
          install.packages('remotes')
          install.packages('drat')
          drat:::add('carpentries')
          saveRDS(remotes::package_deps('sandpaper', dependencies = TRUE), ".github/depends.Rds", version = 2)
          writeLines(sprintf("R-%i.%i", getRversion()$major, getRversion()$minor), ".github/R-version")
        shell: Rscript {0}

      - name: Install Sandpaper Dependencies
        run: |
          drat:::add("carpentries")
          pkgs <- readRDS(".github/depends.Rds")
          pkgs$diff[pkgs$package == "tinkr"] <- -1 # force tinkr update for now
          library("remotes")
          update(pkgs, upgrade = "always")
          install_github('carpentries/varnish')
          install.packages("sessioninfo")
        shell: Rscript {0}

      - name: Show Session Information
        run: |
          cli::cli_rule("Time Built")
          pkg_tim <- function(p) {
            paste(format(c(p, "sandpaper"))[1], packageDescription(p)$Packaged)
          }
          status <- vapply(c("sandpaper", "pegboard", "varnish", "tinkr"), pkg_tim, character(1))
          cli::cli_bullets(status)
          cli::cli_rule("Session info")
          sessioninfo::platform_info()
          cli::cli_rule("Package Info")
          sessioninfo::package_info("sandpaper", dependencies = TRUE)
        shell: Rscript {0}

      - name: Build Site
        id: build-site
        run: |
          git config --local user.email "actions@github.com"
          git config --local user.name "GitHub Actions"
          Rscript -e 'sandpaper::build_lesson()'

      - name: Generate Commit
        id: generate-commit
        run: |
          mkdir -p ${{ env.CHIVE }}
          mkdir -p ${{ env.PR }}
          echo ${{ github.event.number }} > ${{ env.PR }}/NR
          DIFF=${{ env.CHIVE }}/diff.md
          cd ${{ env.MD }}
          git add -A .
          printf "### Rendered Changes\n\n" > $DIFF
          printf "\n:mag: Inspect the changes: https://github.com/${{ github.repository }}/compare/md-outputs..md-outputs-PR-${{ github.event.number }}\n" >> ${DIFF}
          printf "\n---\n" >> $DIFF
          printf "\nThe following changes were observed in the rendered markdown documents\n" >> $DIFF
          printf "\n\`\`\`diff\n" >> $DIFF
          git diff --staged --compact-summary >> $DIFF
          printf "\n\`\`\`\n" >> $DIFF
          # removing git repo for the built archive.
          rm -rf .git

      - name: Upload PR
        uses: actions/upload-artifact@v2
        with:
          name: pr
          path: ${{ env.PR }}

      - name: Upload Diff
        uses: actions/upload-artifact@v2
        with:
          name: diff
          path: ${{ env.CHIVE }}
      
      - name: Upload Build
        uses: actions/upload-artifact@v2
        with:
          name: built
          path: ${{ env.MD }}

      - name: Teardown
        run: sandpaper::reset_site()
        shell: Rscript {0}
